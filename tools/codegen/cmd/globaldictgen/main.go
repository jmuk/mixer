// Copyright 2017 Istio Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package main

import (
	"fmt"
	"html/template"
	"io/ioutil"
	"os"

	"github.com/ghodss/yaml"
)

const globalDictionaryTemplate string = `
// DO NOT EDIT: this file is automatically generated by globaldictgen tool.

package api

var (
	// Global word list
	globalWordList = []string{
		{{range . -}}
		"{{.}}",
		{{end}}
	}
)
`

func main() {
	input, err := ioutil.ReadFile(os.Args[1])
	if err != nil {
		fmt.Fprintf(os.Stderr, "%v\n", err)
		return
	}
	var words []string
	if err := yaml.Unmarshal(input, &words); err != nil {
		fmt.Fprintf(os.Stderr, "failed to parse: %v\n", err)
		return
	}
	tmpl := template.Must(template.New("globalDictionary").Parse(globalDictionaryTemplate))
	if err := tmpl.Execute(os.Stdout, words); err != nil {
		fmt.Fprintf(os.Stderr, "failed to process the template: %v\n", err)
	}
}
